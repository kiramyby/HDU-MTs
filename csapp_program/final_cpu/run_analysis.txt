RISC-V汇编到机器码对应表 - run.s

=== 程序功能分析 ===
这是一个数组求和程序：
- 从地址0x10开始读取数据
- 读取3个字(a1=3)
- 将求和结果存储到地址0x30

=== 指令对应表 ===
地址 | 汇编指令                    | 机器码    | 说明
-----|----------------------------|-----------|------------------------------------------
0    | addi a0, zero, 0x10        | 01000513  | a0 = 16 (数组起始地址)
1    | ori a1, zero, 3            | 00306593  | a1 = 3 (数组元素个数)
2    | xori a2, zero, 0x30        | 03004613  | a2 = 48 (结果存储地址)
3    | jal BankSum                | 0100006f  | 调用BankSum函数
4    | lw s0, 0(a2)              | 00062403  | 从结果地址加载值到s0
5    | add zero, zero, zero       | 00000033  | NOP指令
6    | add zero, zero, zero       | 00000033  | NOP指令
7    | add t0, a0, zero          | 00a002b3  | t0 = a0 (当前地址指针)
8    | or t1, a1, zero           | 00b00333  | t1 = a1 (计数器)
9    | and t2, zero, zero        | 0000f3b3  | t2 = 0 (累加器初始化)
10   | lw t3, 0(t0)              | 0002ae03  | 从当前地址加载数据
11   | add t2, t2, t3            | 01c383b3  | 累加到t2
12   | addi t0, t0, 4            | 00428293  | 地址指针递增4字节
13   | beq t1, zero, exit        | 00030463  | 如果计数器为0则退出
14   | jal L                     | ff1ff06f  | 跳回循环开始
15   | sw t2, 0(a2)              | 00762023  | 将结果存储到指定地址
16   | jr ra                     | 00008067  | 返回调用者

=== 跳转计算 ===
- 地址3 jal BankSum: 跳转到地址7, 偏移 = (7-3)*4 = 16字节
- 地址13 beq exit: 跳转到地址15, 偏移 = (15-13)*4 = 8字节  
- 地址14 jal L: 跳转到地址10, 偏移 = (10-14)*4 = -16字节

=== 寄存器使用 ===
- a0 (x10): 数组起始地址 0x10
- a1 (x11): 数组元素个数 3
- a2 (x12): 结果存储地址 0x30
- t0 (x5): 当前读取地址指针
- t1 (x6): 循环计数器
- t2 (x7): 累加器
- t3 (x28): 临时存储当前读取的值
- s0 (x8): 存储最终结果
- ra (x1): 返回地址
